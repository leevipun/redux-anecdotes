on:
    push:
      branches: [main]
    pull_request:
        branches: [main]
        types: [opened, synchronize]

env:
    CI: true

jobs:
    Lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '20'

            - name: Install dependencies
              run: npm install

            - name: Run lint
              run: npm run lint
    Test:
        needs: [Lint]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              
            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '20'

            - name: Install dependencies
              run: npm install

            - name: Start JSON Server
              run: npm run server & # Run in background
              
            - name: Start Vite dev server
              run: |
                npm run dev & # Run in background
                echo "Waiting for dev server..."
                # Wait for Vite server to be ready
                while ! nc -z localhost 5173; do
                  sleep 1
                done
                echo "Dev server is up!"
                # Wait for JSON server to be ready
                while ! nc -z localhost 3001; do
                  sleep 1
                done
                echo "JSON server is up!"

            - name: Install Playwright browsers
              run: npx playwright install --with-deps

            - name: Run Playwright tests
              run: npm run test
              env:
                CI: true
                # Add any environment variables needed for tests

    Tag_release:
        name: Tag Release
        needs: [Lint, Test]
        runs-on: ubuntu-latest
        permissions:
            contents: 'write' # Required to push new tags
        # Skip tagging if the commit message contains #skip for push events or if PR title contains #skip
        if: |
          ${{ 
            github.event_name == 'push' && 
            github.ref == 'refs/heads/main' && 
            !contains(github.event.head_commit.message, '#skip')
          }}
        outputs:
            tag: ${{ steps.tag_version.outputs.tag }}
            changelog: ${{ steps.tag_version.outputs.changelog }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4.1.7
              with:
                fetch-depth: 0 # Required for changelog generation

            - name: Bump version and push tag
              id: tag_version
              uses: anothrNick/github-tag-action@1.73.0
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                TAG_PREFIX: v
                DEFAULT_BUMP: patch

            - name: Log new tag
              run: echo "New tag is ${{ steps.tag_version.outputs.tag }}"
    Notification:
        runs-on: ubuntu-latest
        needs: [Tag_release, Lint, Test]
        if: |
          ${{ 
            always() && 
            github.event_name != 'pull_request' && 
            !contains(github.event.head_commit.message, '#skip') 
          }}
        steps:
          - name: Determine Status
            id: status_check
            run: |
              if [[ "${{ needs.Lint.result }}" == "failure" || "${{ needs.Test.result }}" == "failure" || "${{ needs.Tag_release.result }}" == "failure" ]]; then
                echo "status=failure" >> $GITHUB_OUTPUT
                echo "color=15548997" >> $GITHUB_OUTPUT
                echo "status_text=Failed" >> $GITHUB_OUTPUT
                echo "title=ðŸ’¥ Build Failed! ðŸ’¥" >> $GITHUB_OUTPUT
                echo "description=Something went wrong with the build. Time to debug!" >> $GITHUB_OUTPUT
                echo "image=https://media.giphy.com/media/EimNpKJpihLY4/giphy.gif" >> $GITHUB_OUTPUT
              else
                echo "status=success" >> $GITHUB_OUTPUT
                echo "color=5763719" >> $GITHUB_OUTPUT
                echo "status_text=Success" >> $GITHUB_OUTPUT
                echo "title=ðŸš€ Build Succeeded! ðŸŽ‰" >> $GITHUB_OUTPUT
                echo "description=New version ${{ needs.Tag_release.outputs.tag }} deployed successfully! Changelog: ${{ needs.Tag_release.outputs.changelog }}" >> $GITHUB_OUTPUT
                echo "image=https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExcnEzamQwZTl3Y3AyYzZxdWI2ZjdldTVhMnJzOG14OXYzODh6OGNiNSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/lRjUMp4biswUpXfVUT/giphy.gif" >> $GITHUB_OUTPUT
              fi

          - name: Send Discord notification
            uses: sarisia/actions-status-discord@v1
            with:
              webhook: ${{ secrets.DISCORD_WEBHOOK }}
              status: ${{ steps.status_check.outputs.status }}
              color: ${{ steps.status_check.outputs.color }}
              username: "Redux Anecdotes Bot"
              title: ${{ steps.status_check.outputs.title }}
              description: ${{ steps.status_check.outputs.description }}
              image: ${{ steps.status_check.outputs.image }}
              thumbnail: "https://cdn.worldvectorlogo.com/logos/redux.svg"
              url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              footer: "Commit by ${{ github.actor }} â€¢ ${{ github.event.head_commit.message }}"